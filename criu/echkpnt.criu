#!/usr/bin/python3

# Copyright International Business Machines Corp, 2021
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
import os
import psutil
import logging
import subprocess

log = None

def set_log(logfile):
    global log

    filelog = logging.FileHandler(logfile)
    logformat = logging.Formatter("%(asctime)s %(name)s[%(process)d]: %(message)s")
    filelog.setFormatter(logformat)

    log = logging.getLogger('lsf-criu-checkpoint')
    log.setLevel(logging.DEBUG)
    log.addHandler(filelog)

def log_debug(message):
    if log is not None :
        log.debug(message)

def run_it(cmd) :
    proc = subprocess.Popen(cmd, stdout = subprocess.PIPE, stderr = subprocess.PIPE)
    out, err = proc.communicate()
    if out is not None and out.strip() != '':
        log_debug(out)
    if err is not None and err.strip() != '':
        log_debug(err)
    proc.wait()

def main(argv):
    # For debug purpose only. Comment it out if you don't want debug messages
    set_log("/tmp/lsf-job-" + os.environ['LSB_JOBID'] + ".cr.log")

    log_debug("start checkpointing ......")
    log_debug(argv)

    # get process id for running job to checkpoint
    p = psutil.Process(int(argv[-1]))
    jobpid = str(p.children()[0].pid)
    log_debug('job process id: ' + jobpid)

    # make checkpoint command line
    cmd = ["criu", "dump", "-D", os.environ['LSB_CHKPNT_DIR'] , "-t", jobpid, "--shell-job"];
    if '-k' not in argv: 
        cmd.append('--leave-running')
    log_debug(cmd)

    # checkpoint
    run_it(cmd)

    log_debug("leave checkpointing ...")
    sys.exit(0)


if __name__ == "__main__":
    main(sys.argv[1:])

